// functions/index.js
const functions = require("firebase-functions");
const mqtt = require("mqtt");
const admin = require("firebase-admin");
const { saveMessage } = require("./db");
require("dotenv").config();

const {
  MQTT_URL,
  MQTT_USERNAME,
  MQTT_PASSWORD,
  MQTT_TOPIC
} = process.env;

const serviceAccount = require("./serviceAccountKey.json");
admin.initializeApp({ credential: admin.credential.cert(serviceAccount) });

const client = mqtt.connect(MQTT_URL, {
  username: MQTT_USERNAME,
  password: MQTT_PASSWORD,
  protocol: "wss",
  reconnectPeriod: 1000
});

client.on("connect", () => {
  console.log("✅ MQTT Connected");
  client.subscribe(MQTT_TOPIC, (err) => {
    if (err) console.error("❌ MQTT Subscription error:", err);
    else console.log(`✅ Subscribed to ${MQTT_TOPIC}`);
  });
});

client.on("message", async (topic, message) => {
  try {
    console.log("📥 Received message on topic:", topic);
    console.log("🧾 Raw payload:", message.toString());

    const data = JSON.parse(message.toString());
    const [, room] = topic.split("/");
    const { id, username, text, timestamp } = data;
    if (!id || !text) return;

    saveMessage({ id, username, room, message: text, timestamp });

    const dummyUserToken = process.env.SERVER_KEY || "FCM_DEVICE_TOKEN_HERE";
    await admin.messaging().send({
      notification: { title: `New message from ${username}`, body: text },
      token: dummyUserToken
    });
  } catch (err) {
    console.error("❌ Message handler error:", err.message);
  }
});

exports.mqttHandler = functions.https.onRequest((req, res) => {
  res.send("MQTT Bridge is running in background.");
});
